/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.skyreco.view;

import static com.skyreco.controller.BinarySearch.Search;
import static com.skyreco.controller.MergeSort.Sort;
import com.skyreco.model.skyrecoModel;
import java.awt.Image;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aayush
 */
public class home extends javax.swing.JFrame {

    /**
     * Creates new form home
     */
    public home() {
        initComponents();
        //for adding the image logo in panel and icon
        Image icon= new ImageIcon(this.getClass().getResource("LOGO (2) (1) (1) (1).png")).getImage();
        this. setIconImage(icon); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        HomeB = new javax.swing.JButton();
        SortB = new javax.swing.JButton();
        SearchB = new javax.swing.JButton();
        AddB = new javax.swing.JButton();
        UpdateB = new javax.swing.JButton();
        DeleteB = new javax.swing.JButton();
        SearchBarTxtf = new javax.swing.JTextField();
        jComboBoxFilterBy = new javax.swing.JComboBox<>();
        SearchL = new javax.swing.JLabel();
        FilterByL = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxSortBy = new javax.swing.JComboBox<>();

        jButton6.setText("Add");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(" SKY RECO");
        setBackground(new java.awt.Color(0, 102, 102));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(250, 250, 250));

        HomeB.setBackground(new java.awt.Color(102, 153, 0));
        HomeB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/skyreco/view/homeIcon.png"))); // NOI18N
        HomeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeBActionPerformed(evt);
            }
        });

        SortB.setBackground(new java.awt.Color(204, 204, 255));
        SortB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/skyreco/view/sort.png"))); // NOI18N
        SortB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortBActionPerformed(evt);
            }
        });

        SearchB.setBackground(new java.awt.Color(0, 153, 204));
        SearchB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/skyreco/view/search.png"))); // NOI18N
        SearchB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBActionPerformed(evt);
            }
        });

        AddB.setBackground(new java.awt.Color(102, 0, 0));
        AddB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/skyreco/view/add.png"))); // NOI18N
        AddB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBActionPerformed(evt);
            }
        });

        UpdateB.setBackground(new java.awt.Color(0, 153, 102));
        UpdateB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/skyreco/view/update.png"))); // NOI18N
        UpdateB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBActionPerformed(evt);
            }
        });

        DeleteB.setBackground(new java.awt.Color(204, 0, 51));
        DeleteB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/skyreco/view/delete.png"))); // NOI18N
        DeleteB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBActionPerformed(evt);
            }
        });

        SearchBarTxtf.setBackground(new java.awt.Color(238, 231, 243));
        SearchBarTxtf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBarTxtfActionPerformed(evt);
            }
        });

        jComboBoxFilterBy.setBackground(new java.awt.Color(246, 239, 255));
        jComboBoxFilterBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "S.N.", "Model No.", "Name", "Company", "Camera", "Range", "Cost", "Purpose" }));
        jComboBoxFilterBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFilterByActionPerformed(evt);
            }
        });

        SearchL.setText("Search");

        FilterByL.setText("Filter by");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "XYZ-1000", "SkyMaster Pro", "AeroTech Innovations", "4K HD Camera", "5324", "1199", "Videography"},
                {"2", "AlphaXplorer 200", "Horizon Explorer", "Horizon Drones", "1080p Camera", "3324", "8979", "Photography"},
                {"3", "FalconEye X5", "FalconEye X5", "SkyVision Technologies", "6K SuperHD Camera", "8543", "1499", "Surveillance"},
                {"4", "Nova-X450", "Nova-X Series", "Nova Drone Systems", "2.7K Camera", "4234", "7495", "Photography"},
                {"5", "Zephyr Pro 3000", "Zephyr Pro", "Aerial Dynamics", "8K UltraHD Camera", "1024", "2299", "Surveillance"},
                {"6", "Phantom Elite 500", "Phantom Elite", "Skybound Innovations", "5.2K Camera", "7356", "1899", "Videography"},
                {"7", "Voyager X7", "Voyager X Series", "Celestial Drones", "4K Camera", "6466", "1099", "Photography"}
            },
            new String [] {
                "S.N.", "Model No.", "Name", "Company", "Camera", "Range (in m)", "Cost (In USD)", "Purpose"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Eras Bold ITC", 0, 26)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/skyreco/view/LOGO (2) (1) (1) (1).png"))); // NOI18N

        jLabel1.setText("Sort By");

        jComboBoxSortBy.setBackground(new java.awt.Color(246, 242, 242));
        jComboBoxSortBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascending" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(485, 485, 485))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(SearchBarTxtf)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(HomeB, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(SortB, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(SearchB, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(SearchL)
                                        .addComponent(jComboBoxFilterBy, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(FilterByL))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(AddB, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(UpdateB, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DeleteB, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jComboBoxSortBy, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1))))
                        .addGap(341, 341, 341))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SearchL)
                .addGap(4, 4, 4)
                .addComponent(SearchBarTxtf, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FilterByL)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxFilterBy, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(jComboBoxSortBy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HomeB, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SortB, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchB, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddB, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdateB, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteB, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void UpdateBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBActionPerformed
        //action perform of update button
        
        //checking if the selected row from the table is only one for update
        if(jTable1.getSelectedRowCount()==1){
            //taking into another frame
            Update a=new Update();
            
            //getting all values of the selected row
            int index = jTable1.getSelectedRow();
            DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
            String sn = tblModel.getValueAt(index, 0).toString();
            String model = tblModel.getValueAt(index, 1).toString();
            String name = tblModel.getValueAt(index, 2).toString();
            String company = tblModel.getValueAt(index, 3).toString();
            String camera = tblModel.getValueAt(index, 4).toString();
            String cost = tblModel.getValueAt(index, 6).toString();
            String range = tblModel.getValueAt(index, 5).toString();
            String purpose = tblModel.getValueAt(index, 7).toString();
        
            a.setVisible(true);
            a.pack();
            a.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            
            //setting the values of the textfield of update frame from value of selected row
            a.SNtxt.setText(sn);
            a.ModelNumberTxt.setText(model);
            a.NameTxt.setText(name);
            a.CompanyTxt.setText(company);
            a.CameraTxt.setText(camera);
            a.CostTxt.setText(cost);
            a.Rangetxt.setText(range);
            
            //setting the combo box as the selected row from the table
            switch (purpose) {
                case "Videography" -> a.PurposeComboBox.setSelectedIndex(0);
                case "Photography" -> a.PurposeComboBox.setSelectedIndex(1);
                case "Surveillance" -> a.PurposeComboBox.setSelectedIndex(2);
            }
            
        }
        else{
            //showing the messsage if the row is empty
            if(jTable1.getRowCount()==0){
                JOptionPane.showMessageDialog(this,"Table is empty!");
            }
            //showing the messsage if the row is not selected
            else if(jTable1.getSelectedRowCount()==0){
                JOptionPane.showMessageDialog(this,"Please select a row by clicking!");
            }
            //showing the messsage if selected row is more than one
            else if(jTable1.getSelectedRowCount()>1){
                JOptionPane.showMessageDialog(this,"Please select one row at a time!");
            }
        }
    }//GEN-LAST:event_UpdateBActionPerformed

    private void SortBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortBActionPerformed
        //creating arraylist for storing the table data
        ArrayList<skyrecoModel> list = new ArrayList<>();
        //forming object of the currrent table for getting the data from the table 
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        
        //getting all the values from the table to arraylist
        for(int index=0;index<jTable1.getRowCount();index++){
            int sn = Integer.parseInt(tblModel.getValueAt(index, 0).toString());
            String model = tblModel.getValueAt(index, 1).toString();
            String name = tblModel.getValueAt(index, 2).toString();
            String company = tblModel.getValueAt(index, 3).toString();
            String camera = tblModel.getValueAt(index, 4).toString();
            int range = Integer.parseInt(tblModel.getValueAt(index, 5).toString());
            int cost =Integer.parseInt(tblModel.getValueAt(index, 6).toString());
            String purpose = tblModel.getValueAt(index, 7).toString();
            
            skyrecoModel drone = new skyrecoModel(sn,model, name, company, camera, range, cost, purpose);
            list.add(drone);
        }
        //clearing or deleting the table before add the sorted data
        ClearTable();
        
        //forming a arraylist of skyrecoModel for getting the sorted data
        ArrayList<skyrecoModel> records = new ArrayList<>();
        records.addAll(Sort(list, jComboBoxFilterBy.getSelectedIndex()));
        
        //change the data values in the table to sorted data
        ChangeDataInTable(records);
        
    }//GEN-LAST:event_SortBActionPerformed

    public static void ClearTable(){
        //Clearing all the data in the table
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        tblModel.setRowCount(1-1);
    }
    
    private void DeleteBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBActionPerformed
        //get jtable model
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        
        //deleting selected row
        if(jTable1.getSelectedRowCount()==1){
            var DoubleCheck = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete?","Comfirm",JOptionPane.YES_OPTION,JOptionPane.QUESTION_MESSAGE);
            if (DoubleCheck == 0) {
              tblModel.removeRow(jTable1.getSelectedRow());
            }
            
        }
        else{
            // showing the message if the table is empty
            if(jTable1.getRowCount()==0){
                JOptionPane.showMessageDialog(this,"Table is empty!");
            }
            //showing the message to select the row for deleting
            else if(jTable1.getSelectedRowCount()==0){
                JOptionPane.showMessageDialog(this,"Please select a row by clicking!");
            }
            //showing message for selecting one row at a time
            else if(jTable1.getSelectedRowCount()>1){
                JOptionPane.showMessageDialog(this,"Please select one row at a time!");
            }
        }
    }//GEN-LAST:event_DeleteBActionPerformed

    private void SearchBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBActionPerformed
        //checking if the textfield is empty and showing appriprote message
        if(SearchBarTxtf.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Please!! Enter the value in the Search Bar!");
        }else{
            //creating a ArrayList skyrecoModel for passing it to the binary search class
            ArrayList<skyrecoModel> list = new ArrayList<>();
            
            //for getting the data from the current table
            DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
            
            //adding all the values from the table to the arraylist
            for(int index=0;index<jTable1.getRowCount();index++){
                int sn = Integer.parseInt(tblModel.getValueAt(index, 0).toString());
                String model = tblModel.getValueAt(index, 1).toString();
                String name = tblModel.getValueAt(index, 2).toString();
                String company = tblModel.getValueAt(index, 3).toString();
                String camera = tblModel.getValueAt(index, 4).toString();
                int cost =Integer.parseInt(tblModel.getValueAt(index, 6).toString());
                int range = Integer.parseInt(tblModel.getValueAt(index, 5).toString());
                String purpose = tblModel.getValueAt(index, 7).toString();
                skyrecoModel drone = new skyrecoModel(sn,model, name, company, camera, range, cost, purpose);
                list.add(drone);
            }
            ArrayList<skyrecoModel> finallist = new ArrayList<>();
            finallist.addAll(Search(list, SearchBarTxtf.getText(), jComboBoxFilterBy.getSelectedIndex()));
            
            //showing the full information of the searched value
            for(int i=0;i<finallist.size();i++){
                int SN=finallist.get(i).getSerialNumber();
                String ModelNumber=finallist.get(i).getModelNumber();
                String name=finallist.get(i).getName();
                String company=finallist.get(i).getCompany();
                String camera=finallist.get(i).getCamera();
                int range=finallist.get(i).getRange();
                int cost=finallist.get(i).getCost();
                String purpose=finallist.get(i).getPurpose();
                JOptionPane.showMessageDialog(this,"Result of the search is "+"Serial Number="+SN+" ModelNumber= "+ModelNumber
                +", name ="+name+", company"+company+", camera = "+camera+ ", range= "+range+", cost"+cost+", purpose="+purpose);
            }
            //messsage to show if the value searched doesn't exist
            if(finallist.isEmpty()){
                 JOptionPane.showMessageDialog(this,"The Searched value doesn't exist in the table! Please enter proper value!");
            }
        }
    }//GEN-LAST:event_SearchBActionPerformed

    private void HomeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HomeBActionPerformed

    private void AddBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBActionPerformed
        //taking into another frame
        Add a=new Add();
        a.setVisible(true);
    }//GEN-LAST:event_AddBActionPerformed

    private void SearchBarTxtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBarTxtfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchBarTxtfActionPerformed

    private void jComboBoxFilterByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFilterByActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxFilterByActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       
    }//GEN-LAST:event_jTable1MouseClicked

    public static void AddRowToJTable(Object[] dataRow){
        //this method is used for adding new data into the table
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        model.addRow(dataRow);
    }
    
    public static void UpdateRow(Object[] dataRow){
        //method used in another class used to update the information in the table
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        for(int i=0;i<8;i++){
            model.setValueAt(dataRow[i], jTable1.getSelectedRow(), i);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new home().setVisible(true);
        });
    }

    public static int snsetter(){
        //since the sn is not determined by the user but determined by the system, this method gives unique sn to every row
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        String sn;
        //checking if the table is empty to set the sn from 1
        if(tblModel.getRowCount()==0){
            sn="0";
        }
        //sn is always greater than the last sn
        else{
            //creating arraylist for storing the table data
            ArrayList<skyrecoModel> list = new ArrayList<>();

            //getting all the values from the table to arraylist
            for(int index=0;index<jTable1.getRowCount();index++){
                int SN = Integer.parseInt(tblModel.getValueAt(index, 0).toString());
                String model = tblModel.getValueAt(index, 1).toString();
                String name = tblModel.getValueAt(index, 2).toString();
                String company = tblModel.getValueAt(index, 3).toString();
                String camera = tblModel.getValueAt(index, 4).toString();
                int range = Integer.parseInt(tblModel.getValueAt(index, 5).toString());
                int cost =Integer.parseInt(tblModel.getValueAt(index, 6).toString());
                String purpose = tblModel.getValueAt(index, 7).toString();

                skyrecoModel drone = new skyrecoModel(SN,model, name, company, camera, range, cost, purpose);
                list.add(drone);
            }
            //clearing or deleting the table before add the sorted data
            ClearTable();
            
            //forming a arraylist of skyrecoModel for getting the sorted data
            ArrayList<skyrecoModel> records = new ArrayList<>();
            records.addAll(Sort(list, 0));
            
            //change the data values in the table to sorted data
            ChangeDataInTable(records);
            
            //Sorting to get the proper last number
            sn = tblModel.getValueAt(jTable1.getRowCount()-1, 0).toString();
        }
        //for determining sn
        int b=Integer.parseInt(sn)+1;
        return b;
    }
  
    private static Object[] getColumnValues(JTable table, int columnIndex) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int rowCount = model.getRowCount();
        Object[] columnValues = new Object[rowCount];

        for (int i = 0; i < rowCount; i++) {
            columnValues[i] = model.getValueAt(i, columnIndex);
        }

        return columnValues;
    }
    
    
    public static boolean CheckModelRepeat(String a){
        //for checking the value exists before to stop the repetation of the data
        boolean Found = false;
        for (Object element : getColumnValues(jTable1,1)) {
            if (element.equals(a)) {
                Found = true;
                break; // Stop searching once the string is found
            }
        }
        return Found;
    }
    
    
    public static void ChangeDataInTable(ArrayList<skyrecoModel> list){
        //for chainging the data of the table
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Object rowData[] = new Object[8];
        for(int i=0;i<list.size();i++){
            rowData[0]=list.get(i).getSerialNumber();
            rowData[1]=list.get(i).getModelNumber();
            rowData[2]=list.get(i).getName();
            rowData[3]=list.get(i).getCompany();
            rowData[4]=list.get(i).getCamera();
            rowData[5]=list.get(i).getRange();
            rowData[6]=list.get(i).getCost();
            rowData[7]=list.get(i).getPurpose();
            model.addRow(rowData);
        }
        
    }
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddB;
    private javax.swing.JButton DeleteB;
    private javax.swing.JLabel FilterByL;
    private javax.swing.JButton HomeB;
    private javax.swing.JButton SearchB;
    private javax.swing.JTextField SearchBarTxtf;
    private javax.swing.JLabel SearchL;
    private javax.swing.JButton SortB;
    private javax.swing.JButton UpdateB;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBoxFilterBy;
    private javax.swing.JComboBox<String> jComboBoxSortBy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
